import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import StandardScaler
import numpy as np

def extract_features():
    """Extracts TF-IDF and content-based features."""
    df = pd.read_csv("data/processed_emails.csv")

    tfidf_vectorizer = TfidfVectorizer(max_features=5000)
    X_tfidf = tfidf_vectorizer.fit_transform(df['text'])

    df['num_links'] = df['text'].apply(lambda x: x.count('http'))
    df['num_words'] = df['text'].apply(lambda x: len(x.split()))

    content_features = df[['num_links', 'num_words']]
    scaler = StandardScaler()
    content_features = scaler.fit_transform(content_features)

    X_final = np.hstack((X_tfidf.toarray(), content_features))
    y = df['label'].values

    np.savez("data/features.npz", X=X_final, y=y)
    print("âœ… Features extracted and saved successfully!")

if __name__ == "__main__":
    extract_features()
